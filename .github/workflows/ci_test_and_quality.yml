name: Cypress Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cypress-tests:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: breizhsport-front
    steps:
      # Étape 1 : Checkout du code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Étape 2 : Configuration de Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      # Étape 3 : Nettoyer node_modules et package-lock.json
      - name: Clean Node Modules
        run: |
          rm -rf node_modules
          rm -f package-lock.json

      # Étape 4 : Créer le dossier videos
      - name: Create videos directory
        run: mkdir -p cypress/videos

      # Étape 5 : Installation des dépendances
      - name: Install Dependencies
        run: npm install

      # Étape 6 : Installation de Cypress (sans exécution des tests)
      - name: Cypress E2E Install
        uses: cypress-io/github-action@v6
        with:
          runTests: false
          working-directory: breizhsport-front

      # Étape 7 : Démarrer le serveur Angular en arrière-plan
      - name: Start Angular Server
        run: npx ng serve &
        env:
          NODE_OPTIONS: --openssl-legacy-provider

      # Étape 8 : Exécuter les tests Cypress avec un reporter JSON
      - name: Run Cypress Tests
        run: |
          npx cypress run --reporter json --reporter-options "output=cypress/results.json"
        working-directory: breizhsport-front

      # Étape 9 : Lire la durée totale des tests depuis le fichier JSON
      - name: Extract Test Duration
        id: extract-duration
        run: |
          DURATION=$(node -e "console.log(require('./cypress/results.json').totalDuration / 1000)")
          echo "duration=$DURATION" >> $GITHUB_OUTPUT

      # Étape 10 : Générer un résumé personnalisé avec le scénario de test
      - name: Generate Job Summary
        run: |
          echo "### Scénario de test Cypress" >> $GITHUB_STEP_SUMMARY
          echo "Les tests Cypress ont été exécutés avec succès." >> $GITHUB_STEP_SUMMARY
          echo "#### Détails du scénario :" >> $GITHUB_STEP_SUMMARY
          echo "1. **Charger la page d’accueil** : La page d'accueil a été chargée avec succès." >> $GITHUB_STEP_SUMMARY
          echo "2. **Naviguer vers une catégorie spécifique (Cyclisme)** : La catégorie Cyclisme a été sélectionnée." >> $GITHUB_STEP_SUMMARY
          echo "3. **Afficher les détails d’un produit de cette catégorie** : Les détails du produit ont été affichés." >> $GITHUB_STEP_SUMMARY
          echo "4. **Ajouter ce produit au panier** : Le produit a été ajouté au panier." >> $GITHUB_STEP_SUMMARY
          echo "5. **Accéder à la page du panier et vérifier que le produit y est bien ajouté** : Le produit est présent dans le panier." >> $GITHUB_STEP_SUMMARY
          echo "#### Résultats :" >> $GITHUB_STEP_SUMMARY
          echo "- **Fichier de test** : breizhsport.cy.js" >> $GITHUB_STEP_SUMMARY
          echo "- **Nombre de tests passés** : 1" >> $GITHUB_STEP_SUMMARY
          echo "- **Durée totale** : ${{ steps.extract-duration.outputs.duration }}s" >> $GITHUB_STEP_SUMMARY
          echo "- **Vidéo générée** : [Voir la vidéo](#)" >> $GITHUB_STEP_SUMMARY

      # Étape 11 : Téléverser les artefacts (vidéos, screenshots, etc.)
      - name: Upload Cypress Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts
          path: |
            cypress/videos
            cypress/screenshots
            cypress/results.json
          retention-days: 3